<?xml version="1.0" encoding="utf-8"?>
<res name="ShaderProgram" class="ShaderProgram" name="ShaderProgram" class="ShaderProgram" path="Res://material/Terrain.shader" Type="glsl" VertexShader="#version 450&#10;&#10;layout(binding = 0, std140) uniform UBO&#10;{&#10;    mat4 u_WorldMatrix;&#10;    mat4 u_ViewProjMatrix;&#10;} vs_ubo;&#10;&#10;layout(location = 0) in vec3 a_Position;&#10;layout(location = 0) out vec3 v_Position;&#10;layout(location = 1) out vec3 v_Normal;&#10;layout(location = 1) in vec3 a_Normal;&#10;layout(location = 4) out vec4 v_Weight;&#10;layout(location = 4) in vec4 a_Weight;&#10;layout(location = 5) out vec4 v_Joint;&#10;layout(location = 5) in vec4 a_Joint;&#10;&#10;void main()&#10;{&#10;    vec4 position = vs_ubo.u_WorldMatrix * vec4(a_Position, 1.0);&#10;    position = vs_ubo.u_ViewProjMatrix * position;&#10;    gl_Position = position;&#10;    v_Position = position.xyz;&#10;    v_Normal = normalize(vec3((vs_ubo.u_WorldMatrix * vec4(a_Normal, 0.0)).xyz));&#10;    v_Weight = a_Weight;&#10;    v_Joint = a_Joint;&#10;}&#10;&#10;" FragmentShader="#version 450&#10;&#10;struct PBRInfo&#10;{&#10;    float NdotL;&#10;    float NdotV;&#10;    float NdotH;&#10;    float LdotH;&#10;    float VdotH;&#10;    float perceptualRoughness;&#10;    float metalness;&#10;    vec3 reflectance0;&#10;    vec3 reflectance90;&#10;    float alphaRoughness;&#10;    vec3 diffuseColor;&#10;    vec3 specularColor;&#10;};&#10;&#10;layout(binding = 0, std140) uniform UBO&#10;{&#10;    vec3 u_CameraPosition;&#10;} fs_ubo;&#10;&#10;layout(location = 4) in vec4 v_Weight;&#10;layout(location = 0) in vec3 v_Position;&#10;layout(location = 1) in vec3 v_Normal;&#10;layout(location = 0) out vec4 o_FragColor;&#10;layout(location = 5) in vec4 v_Joint;&#10;&#10;vec3 SRgbToLinear(vec3 srgbIn)&#10;{&#10;    return pow(srgbIn, vec3(2.2000000476837158203125));&#10;}&#10;&#10;vec3 specularReflection(PBRInfo pbrInputs)&#10;{&#10;    return pbrInputs.reflectance0 + ((pbrInputs.reflectance90 - pbrInputs.reflectance0) * pow(clamp(1.0 - pbrInputs.VdotH, 0.0, 1.0), 5.0));&#10;}&#10;&#10;float geometricOcclusion(PBRInfo pbrInputs)&#10;{&#10;    float NdotL = pbrInputs.NdotL;&#10;    float NdotV = pbrInputs.NdotV;&#10;    float r = pbrInputs.alphaRoughness;&#10;    float attenuationL = (2.0 * NdotL) / (NdotL + sqrt((r * r) + ((1.0 - (r * r)) * (NdotL * NdotL))));&#10;    float attenuationV = (2.0 * NdotV) / (NdotV + sqrt((r * r) + ((1.0 - (r * r)) * (NdotV * NdotV))));&#10;    return attenuationL * attenuationV;&#10;}&#10;&#10;float microfacetDistribution(PBRInfo pbrInputs)&#10;{&#10;    float roughnessSq = pbrInputs.alphaRoughness * pbrInputs.alphaRoughness;&#10;    float f = (((pbrInputs.NdotH * roughnessSq) - pbrInputs.NdotH) * pbrInputs.NdotH) + 1.0;&#10;    return roughnessSq / ((3.1415927410125732421875 * f) * f);&#10;}&#10;&#10;vec3 diffuse(PBRInfo pbrInputs)&#10;{&#10;    return pbrInputs.diffuseColor / vec3(3.1415927410125732421875);&#10;}&#10;&#10;vec3 PbrLighting(vec3 pixelPosition, vec3 baseColor, vec3 normal, float metallic, float perceptualRoughness, vec3 eyePosition)&#10;{&#10;    float alphaRoughness = perceptualRoughness * perceptualRoughness;&#10;    vec3 f0 = vec3(0.039999999105930328369140625);&#10;    vec3 diffuseColor = baseColor * (vec3(1.0) - f0);&#10;    diffuseColor *= (1.0 - metallic);&#10;    vec3 specularColor = mix(f0, baseColor, vec3(metallic));&#10;    float reflectance = max(max(specularColor.x, specularColor.y), specularColor.z);&#10;    float reflectance90 = clamp(reflectance * 25.0, 0.0, 1.0);&#10;    vec3 specularEnvironmentR0 = specularColor;&#10;    vec3 specularEnvironmentR90 = vec3(1.0) * reflectance90;&#10;    vec3 n = normal;&#10;    vec3 v = normalize(eyePosition - pixelPosition);&#10;    float NdotV = abs(dot(n, v)) + 0.001000000047497451305389404296875;&#10;    vec3 _lightDir = vec3(0.57735025882720947265625);&#10;    vec3 param = vec3(1.2000000476837158203125);&#10;    vec3 _lightColor = SRgbToLinear(param);&#10;    vec3 l = normalize(_lightDir);&#10;    vec3 h = normalize(l + v);&#10;    vec3 reflection = -normalize(reflect(v, n));&#10;    float NdotL = clamp(dot(n, l), 0.001000000047497451305389404296875, 1.0);&#10;    float NdotH = clamp(dot(n, h), 0.0, 1.0);&#10;    float LdotH = clamp(dot(l, h), 0.0, 1.0);&#10;    float VdotH = clamp(dot(v, h), 0.0, 1.0);&#10;    PBRInfo pbrInputs = PBRInfo(NdotL, NdotV, NdotH, LdotH, VdotH, perceptualRoughness, metallic, specularEnvironmentR0, specularEnvironmentR90, alphaRoughness, diffuseColor, specularColor);&#10;    PBRInfo param_1 = pbrInputs;&#10;    vec3 F = specularReflection(param_1);&#10;    PBRInfo param_2 = pbrInputs;&#10;    float G = geometricOcclusion(param_2);&#10;    PBRInfo param_3 = pbrInputs;&#10;    float D = microfacetDistribution(param_3);&#10;    PBRInfo param_4 = pbrInputs;&#10;    vec3 diffuseContrib = (vec3(1.0) - F) * diffuse(param_4);&#10;    vec3 specContrib = ((F * G) * D) / vec3((4.0 * NdotL) * NdotV);&#10;    vec3 color = (_lightColor * NdotL) * (diffuseContrib + specContrib);&#10;    vec3 param_5 = vec3(0.300000011920928955078125);&#10;    vec3 _environmentLightColor = SRgbToLinear(param_5);&#10;    color += (baseColor * _environmentLightColor);&#10;    return color;&#10;}&#10;&#10;vec3 LinearToSRgb(vec3 linearIn)&#10;{&#10;    return pow(linearIn, vec3(0.4545454680919647216796875));&#10;}&#10;&#10;void main()&#10;{&#10;    vec4 Color_23_Value = vec4(0.4205079972743988037109375, 0.3488650023937225341796875, 0.4423229992389678955078125, 1.0);&#10;    vec4 Color_30_Value = vec4(0.0060410001315176486968994140625, 0.01793600060045719146728515625, 0.02537100017070770263671875, 1.0);&#10;    float Float_27 = 1.0;&#10;    float Float_28 = 0.649990022182464599609375;&#10;    float Float_46 = 1.0;&#10;    vec4 Color_37_Value = vec4(0.487765014171600341796875, 0.0045599997974932193756103515625, 0.1449719965457916259765625, 1.0);&#10;    vec4 Color_40_Value = vec4(0.119263999164104461669921875, 0.108710996806621551513671875, 0.086901001632213592529296875, 1.0);&#10;    vec3 Multiplication_29 = Color_30_Value.xyz * v_Weight.y;&#10;    float Substraction_45 = Float_46 - v_Weight.y;&#10;    vec3 Multiplication_39 = Color_37_Value.xyz * v_Weight.z;&#10;    vec3 Multiplication_42 = Color_40_Value.xyz * v_Weight.w;&#10;    float Substraction_48 = Substraction_45 - v_Weight.z;&#10;    vec3 Addition_43 = Multiplication_39 + Multiplication_42;&#10;    float Substraction_49 = Substraction_48 - v_Weight.w;&#10;    vec3 Multiplication_25 = Color_23_Value.xyz * Substraction_49;&#10;    vec3 Addition_31 = Multiplication_25 + Multiplication_29;&#10;    vec3 Addition_44 = Addition_31 + Addition_43;&#10;    vec3 _BaseColor = Addition_44;&#10;    float _Metalic = v_Weight.z;&#10;    float _PerceptualRoughness = Float_28;&#10;    float _Opacity = 1.0;&#10;    vec3 param = v_Position;&#10;    vec3 param_1 = _BaseColor;&#10;    vec3 param_2 = v_Normal;&#10;    float param_3 = _Metalic;&#10;    float param_4 = _PerceptualRoughness;&#10;    vec3 param_5 = fs_ubo.u_CameraPosition;&#10;    _BaseColor = PbrLighting(param, param_1, param_2, param_3, param_4, param_5);&#10;    vec3 param_6 = _BaseColor;&#10;    o_FragColor = vec4(LinearToSRgb(param_6), _Opacity);&#10;}&#10;&#10;" Graph="{&#10;    &quot;connections&quot;: [&#10;        {&#10;            &quot;in_id&quot;: &quot;{40c06597-43ad-413f-b441-945fadbf7af6}&quot;,&#10;            &quot;in_index&quot;: 0,&#10;            &quot;out_id&quot;: &quot;{41da6b6d-108b-4360-ade2-7bc9e70595c0}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        },&#10;        {&#10;            &quot;converter&quot;: {&#10;                &quot;in&quot;: {&#10;                    &quot;id&quot;: &quot;any&quot;,&#10;                    &quot;name&quot;: &quot;B&quot;&#10;                },&#10;                &quot;out&quot;: {&#10;                    &quot;id&quot;: &quot;vec3&quot;,&#10;                    &quot;name&quot;: &quot;vec3&quot;&#10;                }&#10;            },&#10;            &quot;in_id&quot;: &quot;{41da6b6d-108b-4360-ade2-7bc9e70595c0}&quot;,&#10;            &quot;in_index&quot;: 1,&#10;            &quot;out_id&quot;: &quot;{bbed5307-c0a2-4085-a26d-f704aa4065c9}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        },&#10;        {&#10;            &quot;in_id&quot;: &quot;{40c06597-43ad-413f-b441-945fadbf7af6}&quot;,&#10;            &quot;in_index&quot;: 4,&#10;            &quot;out_id&quot;: &quot;{1835e973-b935-4b1b-8def-31019f5441d2}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        },&#10;        {&#10;            &quot;converter&quot;: {&#10;                &quot;in&quot;: {&#10;                    &quot;id&quot;: &quot;any&quot;,&#10;                    &quot;name&quot;: &quot;A&quot;&#10;                },&#10;                &quot;out&quot;: {&#10;                    &quot;id&quot;: &quot;vec3&quot;,&#10;                    &quot;name&quot;: &quot;rgb&quot;&#10;                }&#10;            },&#10;            &quot;in_id&quot;: &quot;{86648fb3-7269-4617-9048-20e38c7d8711}&quot;,&#10;            &quot;in_index&quot;: 0,&#10;            &quot;out_id&quot;: &quot;{a1490569-a6dc-4f1f-b56a-d2ae51fb5b70}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        },&#10;        {&#10;            &quot;in_id&quot;: &quot;{40c06597-43ad-413f-b441-945fadbf7af6}&quot;,&#10;            &quot;in_index&quot;: 3,&#10;            &quot;out_id&quot;: &quot;{7ae4196e-0d7f-4d79-8057-19d1e71d62ad}&quot;,&#10;            &quot;out_index&quot;: 2&#10;        },&#10;        {&#10;            &quot;in_id&quot;: &quot;{40c06597-43ad-413f-b441-945fadbf7af6}&quot;,&#10;            &quot;in_index&quot;: 2,&#10;            &quot;out_id&quot;: &quot;{6f503a41-1cf7-4b80-908b-48aaa45143c4}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        },&#10;        {&#10;            &quot;converter&quot;: {&#10;                &quot;in&quot;: {&#10;                    &quot;id&quot;: &quot;any&quot;,&#10;                    &quot;name&quot;: &quot;A&quot;&#10;                },&#10;                &quot;out&quot;: {&#10;                    &quot;id&quot;: &quot;vec3&quot;,&#10;                    &quot;name&quot;: &quot;vec3&quot;&#10;                }&#10;            },&#10;            &quot;in_id&quot;: &quot;{38eafb86-a4cf-482c-bf85-fef0457b2784}&quot;,&#10;            &quot;in_index&quot;: 0,&#10;            &quot;out_id&quot;: &quot;{86648fb3-7269-4617-9048-20e38c7d8711}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        },&#10;        {&#10;            &quot;converter&quot;: {&#10;                &quot;in&quot;: {&#10;                    &quot;id&quot;: &quot;any&quot;,&#10;                    &quot;name&quot;: &quot;B&quot;&#10;                },&#10;                &quot;out&quot;: {&#10;                    &quot;id&quot;: &quot;vec3&quot;,&#10;                    &quot;name&quot;: &quot;vec3&quot;&#10;                }&#10;            },&#10;            &quot;in_id&quot;: &quot;{38eafb86-a4cf-482c-bf85-fef0457b2784}&quot;,&#10;            &quot;in_index&quot;: 1,&#10;            &quot;out_id&quot;: &quot;{3da03559-be28-4057-b27f-ee4a85f641e0}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        },&#10;        {&#10;            &quot;converter&quot;: {&#10;                &quot;in&quot;: {&#10;                    &quot;id&quot;: &quot;any&quot;,&#10;                    &quot;name&quot;: &quot;A&quot;&#10;                },&#10;                &quot;out&quot;: {&#10;                    &quot;id&quot;: &quot;vec3&quot;,&#10;                    &quot;name&quot;: &quot;rgb&quot;&#10;                }&#10;            },&#10;            &quot;in_id&quot;: &quot;{3da03559-be28-4057-b27f-ee4a85f641e0}&quot;,&#10;            &quot;in_index&quot;: 0,&#10;            &quot;out_id&quot;: &quot;{a83e4aaf-f8b8-43d8-9a11-e6ba6a25815d}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        },&#10;        {&#10;            &quot;converter&quot;: {&#10;                &quot;in&quot;: {&#10;                    &quot;id&quot;: &quot;any&quot;,&#10;                    &quot;name&quot;: &quot;B&quot;&#10;                },&#10;                &quot;out&quot;: {&#10;                    &quot;id&quot;: &quot;float&quot;,&#10;                    &quot;name&quot;: &quot;Layer_1&quot;&#10;                }&#10;            },&#10;            &quot;in_id&quot;: &quot;{3da03559-be28-4057-b27f-ee4a85f641e0}&quot;,&#10;            &quot;in_index&quot;: 1,&#10;            &quot;out_id&quot;: &quot;{b7548ada-9b03-450b-b531-7eb144b0674b}&quot;,&#10;            &quot;out_index&quot;: 1&#10;        },&#10;        {&#10;            &quot;converter&quot;: {&#10;                &quot;in&quot;: {&#10;                    &quot;id&quot;: &quot;any&quot;,&#10;                    &quot;name&quot;: &quot;A&quot;&#10;                },&#10;                &quot;out&quot;: {&#10;                    &quot;id&quot;: &quot;vec3&quot;,&#10;                    &quot;name&quot;: &quot;vec3&quot;&#10;                }&#10;            },&#10;            &quot;in_id&quot;: &quot;{41da6b6d-108b-4360-ade2-7bc9e70595c0}&quot;,&#10;            &quot;in_index&quot;: 0,&#10;            &quot;out_id&quot;: &quot;{38eafb86-a4cf-482c-bf85-fef0457b2784}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        },&#10;        {&#10;            &quot;converter&quot;: {&#10;                &quot;in&quot;: {&#10;                    &quot;id&quot;: &quot;any&quot;,&#10;                    &quot;name&quot;: &quot;B&quot;&#10;                },&#10;                &quot;out&quot;: {&#10;                    &quot;id&quot;: &quot;float&quot;,&#10;                    &quot;name&quot;: &quot;Layer_2&quot;&#10;                }&#10;            },&#10;            &quot;in_id&quot;: &quot;{9f1705e2-be7c-4c5a-8ac0-67bfa087ad8f}&quot;,&#10;            &quot;in_index&quot;: 1,&#10;            &quot;out_id&quot;: &quot;{7ae4196e-0d7f-4d79-8057-19d1e71d62ad}&quot;,&#10;            &quot;out_index&quot;: 2&#10;        },&#10;        {&#10;            &quot;converter&quot;: {&#10;                &quot;in&quot;: {&#10;                    &quot;id&quot;: &quot;any&quot;,&#10;                    &quot;name&quot;: &quot;A&quot;&#10;                },&#10;                &quot;out&quot;: {&#10;                    &quot;id&quot;: &quot;vec3&quot;,&#10;                    &quot;name&quot;: &quot;rgb&quot;&#10;                }&#10;            },&#10;            &quot;in_id&quot;: &quot;{9f1705e2-be7c-4c5a-8ac0-67bfa087ad8f}&quot;,&#10;            &quot;in_index&quot;: 0,&#10;            &quot;out_id&quot;: &quot;{2b7c2067-a41b-4d52-ac9a-eeda64e274e2}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        },&#10;        {&#10;            &quot;converter&quot;: {&#10;                &quot;in&quot;: {&#10;                    &quot;id&quot;: &quot;any&quot;,&#10;                    &quot;name&quot;: &quot;A&quot;&#10;                },&#10;                &quot;out&quot;: {&#10;                    &quot;id&quot;: &quot;vec3&quot;,&#10;                    &quot;name&quot;: &quot;rgb&quot;&#10;                }&#10;            },&#10;            &quot;in_id&quot;: &quot;{0756b0fb-b520-4a9d-a2c7-ba5553e22e3c}&quot;,&#10;            &quot;in_index&quot;: 0,&#10;            &quot;out_id&quot;: &quot;{c9527ade-156a-4cc6-a0ec-5ed83816e3d7}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        },&#10;        {&#10;            &quot;converter&quot;: {&#10;                &quot;in&quot;: {&#10;                    &quot;id&quot;: &quot;any&quot;,&#10;                    &quot;name&quot;: &quot;B&quot;&#10;                },&#10;                &quot;out&quot;: {&#10;                    &quot;id&quot;: &quot;float&quot;,&#10;                    &quot;name&quot;: &quot;Layer_3&quot;&#10;                }&#10;            },&#10;            &quot;in_id&quot;: &quot;{0756b0fb-b520-4a9d-a2c7-ba5553e22e3c}&quot;,&#10;            &quot;in_index&quot;: 1,&#10;            &quot;out_id&quot;: &quot;{40fa9d6a-c177-4826-b8ee-5690d0b0b942}&quot;,&#10;            &quot;out_index&quot;: 3&#10;        },&#10;        {&#10;            &quot;converter&quot;: {&#10;                &quot;in&quot;: {&#10;                    &quot;id&quot;: &quot;any&quot;,&#10;                    &quot;name&quot;: &quot;A&quot;&#10;                },&#10;                &quot;out&quot;: {&#10;                    &quot;id&quot;: &quot;vec3&quot;,&#10;                    &quot;name&quot;: &quot;vec3&quot;&#10;                }&#10;            },&#10;            &quot;in_id&quot;: &quot;{bbed5307-c0a2-4085-a26d-f704aa4065c9}&quot;,&#10;            &quot;in_index&quot;: 0,&#10;            &quot;out_id&quot;: &quot;{9f1705e2-be7c-4c5a-8ac0-67bfa087ad8f}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        },&#10;        {&#10;            &quot;converter&quot;: {&#10;                &quot;in&quot;: {&#10;                    &quot;id&quot;: &quot;any&quot;,&#10;                    &quot;name&quot;: &quot;B&quot;&#10;                },&#10;                &quot;out&quot;: {&#10;                    &quot;id&quot;: &quot;vec3&quot;,&#10;                    &quot;name&quot;: &quot;vec3&quot;&#10;                }&#10;            },&#10;            &quot;in_id&quot;: &quot;{bbed5307-c0a2-4085-a26d-f704aa4065c9}&quot;,&#10;            &quot;in_index&quot;: 1,&#10;            &quot;out_id&quot;: &quot;{0756b0fb-b520-4a9d-a2c7-ba5553e22e3c}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        },&#10;        {&#10;            &quot;converter&quot;: {&#10;                &quot;in&quot;: {&#10;                    &quot;id&quot;: &quot;any&quot;,&#10;                    &quot;name&quot;: &quot;A&quot;&#10;                },&#10;                &quot;out&quot;: {&#10;                    &quot;id&quot;: &quot;float&quot;,&#10;                    &quot;name&quot;: &quot;float&quot;&#10;                }&#10;            },&#10;            &quot;in_id&quot;: &quot;{07260b68-4693-4fdb-85a0-0acf8e5e6440}&quot;,&#10;            &quot;in_index&quot;: 0,&#10;            &quot;out_id&quot;: &quot;{7d969398-e156-46aa-9530-0fa50bf6b2df}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        },&#10;        {&#10;            &quot;converter&quot;: {&#10;                &quot;in&quot;: {&#10;                    &quot;id&quot;: &quot;any&quot;,&#10;                    &quot;name&quot;: &quot;B&quot;&#10;                },&#10;                &quot;out&quot;: {&#10;                    &quot;id&quot;: &quot;float&quot;,&#10;                    &quot;name&quot;: &quot;Layer_1&quot;&#10;                }&#10;            },&#10;            &quot;in_id&quot;: &quot;{07260b68-4693-4fdb-85a0-0acf8e5e6440}&quot;,&#10;            &quot;in_index&quot;: 1,&#10;            &quot;out_id&quot;: &quot;{b8c2a953-4365-44d3-ac43-9b1f5c9b37ff}&quot;,&#10;            &quot;out_index&quot;: 1&#10;        },&#10;        {&#10;            &quot;converter&quot;: {&#10;                &quot;in&quot;: {&#10;                    &quot;id&quot;: &quot;any&quot;,&#10;                    &quot;name&quot;: &quot;A&quot;&#10;                },&#10;                &quot;out&quot;: {&#10;                    &quot;id&quot;: &quot;float&quot;,&#10;                    &quot;name&quot;: &quot;float&quot;&#10;                }&#10;            },&#10;            &quot;in_id&quot;: &quot;{d4b39f1c-e781-4725-9c1a-3127d335ec3a}&quot;,&#10;            &quot;in_index&quot;: 0,&#10;            &quot;out_id&quot;: &quot;{07260b68-4693-4fdb-85a0-0acf8e5e6440}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        },&#10;        {&#10;            &quot;converter&quot;: {&#10;                &quot;in&quot;: {&#10;                    &quot;id&quot;: &quot;any&quot;,&#10;                    &quot;name&quot;: &quot;B&quot;&#10;                },&#10;                &quot;out&quot;: {&#10;                    &quot;id&quot;: &quot;float&quot;,&#10;                    &quot;name&quot;: &quot;Layer_2&quot;&#10;                }&#10;            },&#10;            &quot;in_id&quot;: &quot;{d4b39f1c-e781-4725-9c1a-3127d335ec3a}&quot;,&#10;            &quot;in_index&quot;: 1,&#10;            &quot;out_id&quot;: &quot;{b8c2a953-4365-44d3-ac43-9b1f5c9b37ff}&quot;,&#10;            &quot;out_index&quot;: 2&#10;        },&#10;        {&#10;            &quot;converter&quot;: {&#10;                &quot;in&quot;: {&#10;                    &quot;id&quot;: &quot;any&quot;,&#10;                    &quot;name&quot;: &quot;A&quot;&#10;                },&#10;                &quot;out&quot;: {&#10;                    &quot;id&quot;: &quot;float&quot;,&#10;                    &quot;name&quot;: &quot;float&quot;&#10;                }&#10;            },&#10;            &quot;in_id&quot;: &quot;{23cb9983-54da-4740-b911-6290c6ae74b2}&quot;,&#10;            &quot;in_index&quot;: 0,&#10;            &quot;out_id&quot;: &quot;{d4b39f1c-e781-4725-9c1a-3127d335ec3a}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        },&#10;        {&#10;            &quot;converter&quot;: {&#10;                &quot;in&quot;: {&#10;                    &quot;id&quot;: &quot;any&quot;,&#10;                    &quot;name&quot;: &quot;B&quot;&#10;                },&#10;                &quot;out&quot;: {&#10;                    &quot;id&quot;: &quot;float&quot;,&#10;                    &quot;name&quot;: &quot;Layer_3&quot;&#10;                }&#10;            },&#10;            &quot;in_id&quot;: &quot;{23cb9983-54da-4740-b911-6290c6ae74b2}&quot;,&#10;            &quot;in_index&quot;: 1,&#10;            &quot;out_id&quot;: &quot;{b8c2a953-4365-44d3-ac43-9b1f5c9b37ff}&quot;,&#10;            &quot;out_index&quot;: 3&#10;        },&#10;        {&#10;            &quot;converter&quot;: {&#10;                &quot;in&quot;: {&#10;                    &quot;id&quot;: &quot;any&quot;,&#10;                    &quot;name&quot;: &quot;B&quot;&#10;                },&#10;                &quot;out&quot;: {&#10;                    &quot;id&quot;: &quot;float&quot;,&#10;                    &quot;name&quot;: &quot;float&quot;&#10;                }&#10;            },&#10;            &quot;in_id&quot;: &quot;{86648fb3-7269-4617-9048-20e38c7d8711}&quot;,&#10;            &quot;in_index&quot;: 1,&#10;            &quot;out_id&quot;: &quot;{23cb9983-54da-4740-b911-6290c6ae74b2}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        }&#10;    ],&#10;    &quot;nodes&quot;: [&#10;        {&#10;            &quot;id&quot;: &quot;{3da03559-be28-4057-b27f-ee4a85f641e0}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;name&quot;: &quot;Multiplication&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -1309.3999999999999,&#10;                &quot;y&quot;: 457.79999999999995&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{40c06597-43ad-413f-b441-945fadbf7af6}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;name&quot;: &quot;ShaderTemplate&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -345.96000000000004,&#10;                &quot;y&quot;: 869.1279999999999&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{a1490569-a6dc-4f1f-b56a-d2ae51fb5b70}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;color&quot;: &quot;0.67451 0.619608 0.690196 1 &quot;,&#10;                &quot;name&quot;: &quot;Color&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -1787,&#10;                &quot;y&quot;: -10&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{a83e4aaf-f8b8-43d8-9a11-e6ba6a25815d}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;color&quot;: &quot;0.0980392 0.160784 0.188235 1 &quot;,&#10;                &quot;name&quot;: &quot;Color&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -1790.3999999999996,&#10;                &quot;y&quot;: 404.99999999999966&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{6f503a41-1cf7-4b80-908b-48aaa45143c4}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;name&quot;: &quot;VertexAttribute&quot;,&#10;                &quot;option&quot;: &quot;normal&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -798.536,&#10;                &quot;y&quot;: 943.7359999999999&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{bbed5307-c0a2-4085-a26d-f704aa4065c9}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;name&quot;: &quot;Addition&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -1107.6479999999995,&#10;                &quot;y&quot;: 1093.8239999999996&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{86648fb3-7269-4617-9048-20e38c7d8711}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;name&quot;: &quot;Multiplication&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -1322,&#10;                &quot;y&quot;: 37&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{d2beb1c7-5464-453b-92c1-61dcf90aa725}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;name&quot;: &quot;Float&quot;,&#10;                &quot;number&quot;: &quot;1.0&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -729.536,&#10;                &quot;y&quot;: 1052.7359999999999&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{1835e973-b935-4b1b-8def-31019f5441d2}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;name&quot;: &quot;Float&quot;,&#10;                &quot;number&quot;: &quot;0.64999&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -737.536,&#10;                &quot;y&quot;: 1130.7359999999999&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{38eafb86-a4cf-482c-bf85-fef0457b2784}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;name&quot;: &quot;Addition&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -1084,&#10;                &quot;y&quot;: 321&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{7d969398-e156-46aa-9530-0fa50bf6b2df}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;name&quot;: &quot;Float&quot;,&#10;                &quot;number&quot;: &quot;1.0&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -2434.8000000000006,&#10;                &quot;y&quot;: 206.4&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{07260b68-4693-4fdb-85a0-0acf8e5e6440}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;name&quot;: &quot;Substraction&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -2229.6,&#10;                &quot;y&quot;: 192&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{b7548ada-9b03-450b-b531-7eb144b0674b}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;name&quot;: &quot;LayerBlend&quot;,&#10;                &quot;option&quot;: &quot;1&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -1686,&#10;                &quot;y&quot;: 624&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{2b7c2067-a41b-4d52-ac9a-eeda64e274e2}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;color&quot;: &quot;0.721569 0.0862745 0.415686 1 &quot;,&#10;                &quot;name&quot;: &quot;Color&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -1789,&#10;                &quot;y&quot;: 859&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{7ae4196e-0d7f-4d79-8057-19d1e71d62ad}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;name&quot;: &quot;LayerBlend&quot;,&#10;                &quot;option&quot;: &quot;1&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -1686,&#10;                &quot;y&quot;: 1087&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{9f1705e2-be7c-4c5a-8ac0-67bfa087ad8f}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;name&quot;: &quot;Multiplication&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -1282,&#10;                &quot;y&quot;: 868&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{23cb9983-54da-4740-b911-6290c6ae74b2}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;name&quot;: &quot;Substraction&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -1868.399999999999,&#10;                &quot;y&quot;: 250.79999999999995&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{c9527ade-156a-4cc6-a0ec-5ed83816e3d7}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;color&quot;: &quot;0.380392 0.364706 0.329412 1 &quot;,&#10;                &quot;name&quot;: &quot;Color&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -1787,&#10;                &quot;y&quot;: 1311&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{40fa9d6a-c177-4826-b8ee-5690d0b0b942}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;name&quot;: &quot;LayerBlend&quot;,&#10;                &quot;option&quot;: &quot;1&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -1679,&#10;                &quot;y&quot;: 1534&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{0756b0fb-b520-4a9d-a2c7-ba5553e22e3c}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;name&quot;: &quot;Multiplication&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -1288,&#10;                &quot;y&quot;: 1321&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{41da6b6d-108b-4360-ade2-7bc9e70595c0}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;name&quot;: &quot;Addition&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -941.7599999999998,&#10;                &quot;y&quot;: 739.5839999999996&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{b8c2a953-4365-44d3-ac43-9b1f5c9b37ff}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;name&quot;: &quot;LayerBlend&quot;,&#10;                &quot;option&quot;: &quot;1&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -2412.000000000001,&#10;                &quot;y&quot;: 331.2&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{d4b39f1c-e781-4725-9c1a-3127d335ec3a}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;name&quot;: &quot;Substraction&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -2032.7999999999995,&#10;                &quot;y&quot;: 190.80000000000007&#10;            }&#10;        }&#10;    ]&#10;}&#10;" CullMode="CULL_BACK" BlendMode="Opaque" />
