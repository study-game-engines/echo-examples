<?xml version="1.0" encoding="utf-8"?>
<res class="ShaderProgram" path="Res://Blur/spin-blur.shader" Type="glsl" VertexShader="#version 450&#10;&#10;layout(binding = 0, std140) uniform UBO&#10;{&#10;    mat4 u_WorldMatrix;&#10;    mat4 u_ViewProjMatrix;&#10;} vs_ubo;&#10;&#10;layout(location = 0) in vec3 a_Position;&#10;layout(location = 7) out vec2 v_UV;&#10;layout(location = 4) in vec2 a_UV;&#10;&#10;void main()&#10;{&#10;    vec4 worldPosition = vs_ubo.u_WorldMatrix * vec4(a_Position, 1.0);&#10;    vec4 clipPosition = vs_ubo.u_ViewProjMatrix * worldPosition;&#10;    gl_Position = clipPosition;&#10;    v_UV = a_UV;&#10;}&#10;&#10;" FragmentShader="#version 450&#10;&#10;layout(binding = 0, std140) uniform UBO&#10;{&#10;    float u_Time;&#10;} fs_ubo;&#10;&#10;layout(binding = 1) uniform sampler2D Albedo;&#10;&#10;layout(location = 7) in vec2 v_UV;&#10;layout(location = 0) out vec4 o_FragColor;&#10;&#10;vec3 SpinBlur(sampler2D tex, vec2 uv, vec2 center, float speed, float samples, float weight, float strength)&#10;{&#10;    float len = length(uv - center);&#10;    vec2 dir = normalize(uv - center);&#10;    float _43;&#10;    if (asin(dir.x) &gt; 0.0)&#10;    {&#10;        _43 = acos(dir.y);&#10;    }&#10;    else&#10;    {&#10;        _43 = -acos(dir.y);&#10;    }&#10;    float angle = _43;&#10;    float _step = radians(speed) / samples;&#10;    vec4 origin = texture(tex, uv);&#10;    vec4 color = origin;&#10;    float count = 1.0;&#10;    for (float i = 1.0; i &lt;= samples; i += 1.0)&#10;    {&#10;        float weightPow = pow(clamp(1.0 - (i / samples), 0.0, 1.0), weight);&#10;        float d = angle + (_step * i);&#10;        color += (texture(tex, center + (vec2(sin(d), cos(d)) * len)) * weightPow);&#10;        count += weightPow;&#10;    }&#10;    color /= vec4(count);&#10;    return mix(origin.xyz, color.xyz, vec3(strength));&#10;}&#10;&#10;void main()&#10;{&#10;    vec2 Vector2_187_Value = vec2(0.5);&#10;    float Float_188_Value = 12.0;&#10;    vec4 Albedo_Color = texture(Albedo, v_UV);&#10;    float Float_191_Value = 0.100000001490116119384765625;&#10;    float Float_196_Value = 16.0;&#10;    float Float_202_Value = 1.0;&#10;    float Mod_195 = mod(fs_ubo.u_Time, Float_196_Value);&#10;    vec2 param = v_UV;&#10;    vec2 param_1 = Vector2_187_Value;&#10;    float param_2 = Mod_195;&#10;    float param_3 = Float_188_Value;&#10;    float param_4 = Float_191_Value;&#10;    float param_5 = Float_202_Value;&#10;    vec3 SpinBlur_197 = SpinBlur(Albedo, param, param_1, param_2, param_3, param_4, param_5);&#10;    vec3 _BaseColor = SpinBlur_197;&#10;    float _Opacity = 1.0;&#10;    float _Metalic = 0.20000000298023223876953125;&#10;    float _PerceptualRoughness = 0.5;&#10;    o_FragColor = vec4(_BaseColor, _Opacity);&#10;}&#10;&#10;" Graph="{&#10;    &quot;connections&quot;: [&#10;        {&#10;            &quot;converter&quot;: {&#10;                &quot;in&quot;: {&#10;                    &quot;id&quot;: &quot;any&quot;,&#10;                    &quot;name&quot;: &quot;A&quot;&#10;                },&#10;                &quot;out&quot;: {&#10;                    &quot;id&quot;: &quot;float&quot;,&#10;                    &quot;name&quot;: &quot;float&quot;&#10;                }&#10;            },&#10;            &quot;in_id&quot;: &quot;{fd1cb5df-3671-4bc1-b20b-6e19ca62f3e4}&quot;,&#10;            &quot;in_index&quot;: 0,&#10;            &quot;out_id&quot;: &quot;{4d481c03-b0e4-4a92-bfec-e08cba32956d}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        },&#10;        {&#10;            &quot;in_id&quot;: &quot;{83f71e5f-c8d4-495e-8c15-9dfa00684730}&quot;,&#10;            &quot;in_index&quot;: 1,&#10;            &quot;out_id&quot;: &quot;{8b0caea3-a688-465f-9841-ce8cc3f32bd7}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        },&#10;        {&#10;            &quot;converter&quot;: {&#10;                &quot;in&quot;: {&#10;                    &quot;id&quot;: &quot;any&quot;,&#10;                    &quot;name&quot;: &quot;B&quot;&#10;                },&#10;                &quot;out&quot;: {&#10;                    &quot;id&quot;: &quot;float&quot;,&#10;                    &quot;name&quot;: &quot;float&quot;&#10;                }&#10;            },&#10;            &quot;in_id&quot;: &quot;{fd1cb5df-3671-4bc1-b20b-6e19ca62f3e4}&quot;,&#10;            &quot;in_index&quot;: 1,&#10;            &quot;out_id&quot;: &quot;{a4c0929f-3f06-4702-9fcb-8cd24cda0b5f}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        },&#10;        {&#10;            &quot;in_id&quot;: &quot;{83f71e5f-c8d4-495e-8c15-9dfa00684730}&quot;,&#10;            &quot;in_index&quot;: 5,&#10;            &quot;out_id&quot;: &quot;{59512ae1-9309-49e4-b71b-ffa24fa50161}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        },&#10;        {&#10;            &quot;in_id&quot;: &quot;{83f71e5f-c8d4-495e-8c15-9dfa00684730}&quot;,&#10;            &quot;in_index&quot;: 0,&#10;            &quot;out_id&quot;: &quot;{831c51b6-ccae-4af6-b402-f4b6fd8397e5}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        },&#10;        {&#10;            &quot;in_id&quot;: &quot;{83f71e5f-c8d4-495e-8c15-9dfa00684730}&quot;,&#10;            &quot;in_index&quot;: 6,&#10;            &quot;out_id&quot;: &quot;{570d1bcf-6fba-42f7-a0bb-0e4f252a3a17}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        },&#10;        {&#10;            &quot;in_id&quot;: &quot;{83f71e5f-c8d4-495e-8c15-9dfa00684730}&quot;,&#10;            &quot;in_index&quot;: 3,&#10;            &quot;out_id&quot;: &quot;{fd1cb5df-3671-4bc1-b20b-6e19ca62f3e4}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        },&#10;        {&#10;            &quot;in_id&quot;: &quot;{83f71e5f-c8d4-495e-8c15-9dfa00684730}&quot;,&#10;            &quot;in_index&quot;: 2,&#10;            &quot;out_id&quot;: &quot;{b3811dd9-b095-401e-b5ad-4c30d6234dcf}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        },&#10;        {&#10;            &quot;in_id&quot;: &quot;{83f71e5f-c8d4-495e-8c15-9dfa00684730}&quot;,&#10;            &quot;in_index&quot;: 4,&#10;            &quot;out_id&quot;: &quot;{db7fae7c-f90a-442a-8f1a-2efdecf88ff8}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        },&#10;        {&#10;            &quot;in_id&quot;: &quot;{b7f7e787-366b-4d5a-b8f5-2168aa67d467}&quot;,&#10;            &quot;in_index&quot;: 0,&#10;            &quot;out_id&quot;: &quot;{83f71e5f-c8d4-495e-8c15-9dfa00684730}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        }&#10;    ],&#10;    &quot;nodes&quot;: [&#10;        {&#10;            &quot;id&quot;: &quot;{fd1cb5df-3671-4bc1-b20b-6e19ca62f3e4}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;Variable&quot;: &quot;Mod_195&quot;,&#10;                &quot;name&quot;: &quot;Mod&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -450,&#10;                &quot;y&quot;: 639&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{b3811dd9-b095-401e-b5ad-4c30d6234dcf}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;Uniform&quot;: &quot;false&quot;,&#10;                &quot;Value&quot;: &quot;0.5 0.5&quot;,&#10;                &quot;Variable&quot;: &quot;Vector2_187&quot;,&#10;                &quot;name&quot;: &quot;Vector2&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -440,&#10;                &quot;y&quot;: 566&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{db7fae7c-f90a-442a-8f1a-2efdecf88ff8}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;Value&quot;: &quot;12.0&quot;,&#10;                &quot;Variable&quot;: &quot;Float_188&quot;,&#10;                &quot;name&quot;: &quot;Float&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -497,&#10;                &quot;y&quot;: 750&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{b7f7e787-366b-4d5a-b8f5-2168aa67d467}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;Variable&quot;: &quot;ShaderTemplate_189&quot;,&#10;                &quot;name&quot;: &quot;ShaderTemplate&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: 59,&#10;                &quot;y&quot;: 497&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{831c51b6-ccae-4af6-b402-f4b6fd8397e5}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;Atla&quot;: &quot;false&quot;,&#10;                &quot;Texture&quot;: &quot;Res://Blur/wheel.png&quot;,&#10;                &quot;Type&quot;: &quot;General&quot;,&#10;                &quot;Variable&quot;: &quot;Albedo&quot;,&#10;                &quot;name&quot;: &quot;Texture&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -517,&#10;                &quot;y&quot;: 337&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{59512ae1-9309-49e4-b71b-ffa24fa50161}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;Value&quot;: &quot;0.1&quot;,&#10;                &quot;Variable&quot;: &quot;Float_191&quot;,&#10;                &quot;name&quot;: &quot;Float&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -494,&#10;                &quot;y&quot;: 817&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{8b0caea3-a688-465f-9841-ce8cc3f32bd7}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;Attribute&quot;: &quot;uv0&quot;,&#10;                &quot;Variable&quot;: &quot;VertexAttribute_192&quot;,&#10;                &quot;name&quot;: &quot;VertexAttribute&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -574,&#10;                &quot;y&quot;: 482&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{4d481c03-b0e4-4a92-bfec-e08cba32956d}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;Shared&quot;: &quot;u_Time&quot;,&#10;                &quot;Variable&quot;: &quot;Shared_194&quot;,&#10;                &quot;name&quot;: &quot;Shared&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -754,&#10;                &quot;y&quot;: 625&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{a4c0929f-3f06-4702-9fcb-8cd24cda0b5f}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;Value&quot;: &quot;16.0&quot;,&#10;                &quot;Variable&quot;: &quot;Float_196&quot;,&#10;                &quot;name&quot;: &quot;Float&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -651,&#10;                &quot;y&quot;: 711&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{83f71e5f-c8d4-495e-8c15-9dfa00684730}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;Code&quot;: &quot;vec3 SpinBlur(sampler2D tex, vec2 uv, vec2 center, float speed, float samples, float weight, float strength)\n{\n\tfloat len = length(uv - center);\t\n\tvec2 dir = normalize(uv - center);\n\tfloat angle = asin(dir.x) &gt; 0 ? acos(dir.y) : -acos(dir.y);\n\tfloat step = radians(speed) / samples;\n\tvec4 origin = texture(tex, uv);\n\tvec4 color = origin;\n\tfloat count = 1.0;\n\t\n\tfor (float i = 1.0; i &lt;= samples; i += 1.0)\n\t{\n\t\tfloat weightPow = pow(clamp(1.0 - i / samples, 0.0, 1.0), weight);\n\t\tfloat d = angle + step * i;\n\t\tcolor += texture(tex, center + len * vec2(sin(d), cos(d))) * weightPow;\n\t\tcount += weightPow;\n\t}\n\n\tcolor /= count;\n\n\treturn mix(origin.xyz, color.xyz, strength);\n}&quot;,&#10;                &quot;FunctionName&quot;: &quot;SpinBlur&quot;,&#10;                &quot;Parameters&quot;: &quot;sampler2D tex, vec2 uv, vec2 center, float speed, float samples, float weight, float strength&quot;,&#10;                &quot;ReturnType&quot;: &quot;vec3&quot;,&#10;                &quot;Variable&quot;: &quot;SpinBlur_197&quot;,&#10;                &quot;name&quot;: &quot;SpinBlur&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -169,&#10;                &quot;y&quot;: 495&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{570d1bcf-6fba-42f7-a0bb-0e4f252a3a17}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;Value&quot;: &quot;1.0&quot;,&#10;                &quot;Variable&quot;: &quot;Float_202&quot;,&#10;                &quot;name&quot;: &quot;Float&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -493,&#10;                &quot;y&quot;: 888&#10;            }&#10;        }&#10;    ]&#10;}&#10;" CullMode="CULL_BACK" BlendMode="Opaque" Uniforms.Albedo="Res://Blur/wheel.png" />
