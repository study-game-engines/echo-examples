<?xml version="1.0" encoding="utf-8"?>
<res class="ShaderProgram" path="Res://Color/GrayScale.shader" Type="glsl" VertexShader="#version 450&#10;&#10;layout(binding = 0, std140) uniform UBO&#10;{&#10;    mat4 u_WorldMatrix;&#10;    mat4 u_ViewProjMatrix;&#10;} vs_ubo;&#10;&#10;layout(location = 0) in vec3 a_Position;&#10;layout(location = 7) out vec2 v_UV;&#10;layout(location = 4) in vec2 a_UV;&#10;&#10;void main()&#10;{&#10;    vec4 worldPosition = vs_ubo.u_WorldMatrix * vec4(a_Position, 1.0);&#10;    vec4 clipPosition = vs_ubo.u_ViewProjMatrix * worldPosition;&#10;    gl_Position = clipPosition;&#10;    v_UV = a_UV;&#10;}&#10;&#10;" FragmentShader="#version 450&#10;&#10;layout(binding = 1) uniform sampler2D Albedo;&#10;&#10;layout(location = 7) in vec2 v_UV;&#10;layout(location = 0) out vec4 o_FragColor;&#10;&#10;vec3 SRgbToLinear(vec3 srgbIn)&#10;{&#10;    return srgbIn;&#10;}&#10;&#10;vec3 GrayScale(vec3 rgb)&#10;{&#10;    float gray = dot(rgb, vec3(0.300000011920928955078125, 0.589999973773956298828125, 0.10999999940395355224609375));&#10;    return vec3(gray, gray, gray);&#10;}&#10;&#10;vec3 LinearToSRgb(vec3 linearIn)&#10;{&#10;    return linearIn;&#10;}&#10;&#10;void main()&#10;{&#10;    vec4 Albedo_Color = texture(Albedo, v_UV);&#10;    vec3 param = Albedo_Color.xyz;&#10;    vec3 _55 = SRgbToLinear(param);&#10;    Albedo_Color = vec4(_55.x, _55.y, _55.z, Albedo_Color.w);&#10;    vec3 param_1 = Albedo_Color.xyz;&#10;    vec3 GrayScale_111 = GrayScale(param_1);&#10;    vec3 _BaseColor = GrayScale_111;&#10;    float _Opacity = Albedo_Color.w;&#10;    float _Metalic = 0.20000000298023223876953125;&#10;    float _PerceptualRoughness = 0.5;&#10;    vec3 param_2 = _BaseColor;&#10;    o_FragColor = vec4(LinearToSRgb(param_2), _Opacity);&#10;}&#10;&#10;" Graph="{&#10;    &quot;connections&quot;: [&#10;        {&#10;            &quot;in_id&quot;: &quot;{93c128d3-0ea3-4ff2-bff9-c936ae66aba4}&quot;,&#10;            &quot;in_index&quot;: 1,&#10;            &quot;out_id&quot;: &quot;{6516edfa-a506-470f-a2f4-b4bd782aafef}&quot;,&#10;            &quot;out_index&quot;: 2&#10;        },&#10;        {&#10;            &quot;in_id&quot;: &quot;{9cca0469-e646-4320-95ca-c768b5499dbc}&quot;,&#10;            &quot;in_index&quot;: 0,&#10;            &quot;out_id&quot;: &quot;{6516edfa-a506-470f-a2f4-b4bd782aafef}&quot;,&#10;            &quot;out_index&quot;: 1&#10;        },&#10;        {&#10;            &quot;in_id&quot;: &quot;{93c128d3-0ea3-4ff2-bff9-c936ae66aba4}&quot;,&#10;            &quot;in_index&quot;: 0,&#10;            &quot;out_id&quot;: &quot;{9cca0469-e646-4320-95ca-c768b5499dbc}&quot;,&#10;            &quot;out_index&quot;: 0&#10;        }&#10;    ],&#10;    &quot;nodes&quot;: [&#10;        {&#10;            &quot;id&quot;: &quot;{93c128d3-0ea3-4ff2-bff9-c936ae66aba4}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;name&quot;: &quot;ShaderTemplate&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -26,&#10;                &quot;y&quot;: 257&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{9cca0469-e646-4320-95ca-c768b5499dbc}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;Code&quot;: &quot;vec3 GrayScale(vec3 rgb)\n{\n\tfloat gray = dot(rgb, vec3(0.3, 0.59, 0.11));\n\treturn vec3(gray, gray, gray);\n}&quot;,&#10;                &quot;FunctionName&quot;: &quot;GrayScale&quot;,&#10;                &quot;Parameters&quot;: &quot;vec3 rgb&quot;,&#10;                &quot;ReturnType&quot;: &quot;vec3&quot;,&#10;                &quot;name&quot;: &quot;GrayScale&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -202,&#10;                &quot;y&quot;: 230&#10;            }&#10;        },&#10;        {&#10;            &quot;id&quot;: &quot;{6516edfa-a506-470f-a2f4-b4bd782aafef}&quot;,&#10;            &quot;model&quot;: {&#10;                &quot;Export&quot;: &quot;true&quot;,&#10;                &quot;isAtla&quot;: &quot;false&quot;,&#10;                &quot;name&quot;: &quot;Texture&quot;,&#10;                &quot;texture&quot;: &quot;Res://Color/Mario.png&quot;,&#10;                &quot;type&quot;: &quot;General&quot;,&#10;                &quot;variableName&quot;: &quot;Albedo&quot;&#10;            },&#10;            &quot;position&quot;: {&#10;                &quot;x&quot;: -426,&#10;                &quot;y&quot;: 223&#10;            }&#10;        }&#10;    ]&#10;}&#10;" CullMode="CULL_BACK" BlendMode="Transparent" Uniforms.Albedo="Res://Color/Mario.png" />
